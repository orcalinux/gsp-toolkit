@startuml gsp_single_command_ack_miss_sequence

'──────────────────────── Visual settings ────────────────────────
skinparam ParticipantPadding 120 '
skinparam participant {
    BackgroundColor #053671
    BorderColor     #1e1e1e
    FontColor       white
}
skinparam sequence {
    ArrowColor                 #1e1e1e
    LifeLineBorderColor        #1e1e1e
    LifeLineBackgroundColor    #ff9f1c
    ParticipantBorderColor     #1e1e1e
    ParticipantBackgroundColor #053671
    ParticipantFontColor       white
}

title **BSP Sequence – Single Command ACK Miss**

participant "Host App"         as HA
participant "Host Cmd Layer"   as HC
participant "Host DTL Layer"   as HD
participant "Host PHY Layer"   as HP
participant "Target PHY Layer" as TP
participant "Target DTL Layer" as TD
participant "Target Cmd Layer" as TC
participant "Target App"       as TA

autonumber "<b>[0]</b>"

'─── 1) Host sends a single command ─────────────────────────────
activate HA
HA -> HC : sendCommand(cmd)
deactivate HA

activate HC
note right of HC
  • Frame CRA(cmd)  
  • Start Response-timer (200 ms)
end note
HC -> HD : wrapCRA(cmd)
deactivate HC

activate HD
note right of HD
  • SLIP+CRC(cmd)
end note
HD --> HC : CRA_frame
deactivate HD

activate HC
HC -> HP : sendFrame(CRA_frame)
deactivate HC

activate HP
HP -> TP : UART bytes (CRA_frame)
deactivate HP

'─── 2) Target processes and responds ──────────────────────────
activate TP
TP -> TD : deliverBytes() [CRA]
deactivate TP

activate TD
note right of TD
  • Decode+CRC OK(cmd)
end note
TD -> TC : extractCRA(cmd)
deactivate TD

activate TC
TC -> TA : deliverCommand(cmd)
deactivate TC

activate TA
TA --> TC : sendResponse(resp)
deactivate TA

activate TC
note right of TC
  • Wrap CRA(resp, Session ID=0xXX)  
  • Start ACK-timer (200 ms)
end note
TC -> TD : wrapCRA(resp)
deactivate TC

activate TD
note right of TD
  • SLIP+CRC(resp)
end note
TD -> TP : sendFrame(resp)
deactivate TD

activate TP
TP -> HP : UART bytes (resp)
deactivate TP

'─── 3) Host processes response ────────────────────────────────
activate HP
HP -> HD : deliverBytes() [resp]
deactivate HP

activate HD
note right of HD
  • Decode+CRC OK(resp)
end note
HD -> HC : extractCRA(resp)
deactivate HD

activate HC
note right of HC
  • Parse status  
  • Stop Response-timer
end note
HC -> HA : deliverResponse(resp)
deactivate HC

'─── 4) Host sends ACK, but it’s lost ──────────────────────────
activate HA
HA --> HC : sendACK() [for resp]
deactivate HA

activate HC
note right of HC
  • Wrap CRA(ACK, Session ID=0xXX, Flags=0x04)
end note
HC -> HD : wrapCRA(ACK)
deactivate HC

activate HD
note right of HD
  • Build ACK frame
end note
HD --> HC : ACK_frame
deactivate HD

activate HC
HC -> HP : sendFrame(ACK_frame)
deactivate HC

activate HP
HP -x TP : UART bytes (ACK) <color:red>X lost</color>
deactivate HP

'─── 5) Target times out and retransmits response ──────────────
activate TD
note right of TD
  • ACK-timer expires (200 ms)  
  • Retransmit response (Session ID=0xXX)
end note
TD -> TP : sendFrame(resp) «retry»
deactivate TD

activate TP
TP -> HP : UART bytes (resp) «retry»
deactivate TP

'─── 6) Host processes retransmitted response ───────────────────
activate HP
HP -> HD : deliverBytes() [resp retry]
deactivate HP

activate HD
note right of HD
  • Decode+CRC OK(resp)
end note
HD -> HC : extractCRA(resp)
deactivate HD

activate HC
note right of HC
  • Detect duplicate (Session ID=0xXX)  
  • Ignore response, resend ACK
end note
HC -> HA : deliverResponse(resp) «ignored»
deactivate HC

activate HA
HA --> HC : sendACK() [for resp retry]
deactivate HA

activate HC
note right of HC
  • Wrap CRA(ACK, Session ID=0xXX, Flags=0x04)
end note
HC -> HD : wrapCRA(ACK)
deactivate HC

activate HD
note right of HD
  • Build ACK frame
end note
HD --> HC : ACK_frame
deactivate HD

activate HC
HC -> HP : sendFrame(ACK_frame)
deactivate HC

activate HP
HP -> TP : UART bytes (ACK)
deactivate HP

'─── 7) Target processes retransmitted ACK ─────────────────────
activate TP
TP -> TD : deliverBytes() [ACK]
deactivate TP

activate TD
note right of TD
  • Extract CRA(ACK, Session ID=0xXX)  
  • Stop ACK-timer
end note
deactivate TD

@enduml